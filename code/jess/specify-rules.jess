(defrule causes-to-wire-specify
	"If a component doesn't work properly, a wire connected to it also doesn't work"
 	(causes-to-wire
	 	(faulty-comp-type ?fctype)
		(faulty-comp-state ?fcstate)
		(wire-state ?wstate)
	)
 	(component
		{type == ?fctype && state == ?fcstate}
		(id ?cid)
	)
	?c <- (connection
	 	{in == ?cid}
	)
	=>
	(modify ?c
		(state ?wstate)
	)
)
(defrule causes-from-wire-specify
	"If a wire doesn't work propely, a component connected to it also doesn't work"
 	(causes-from-wire
		(faulty-wire-state ?fwstate)
		(component-type ?ctype)
		(component-state ?cstate)
	)
 	?c <- (component
		{type == ?ctype}
		(id ?cid)
	)
	(connection
	 	{out == ?cid && state == ?fwstate}
	)
	=>
	(modify ?c
		(state ?cstate)
	)
)
(defrule causes-from-2wires-specify
	"If 2 wires doesn't work propely, a component connected to it also doesn't work"
 	(causes-from-wire
		(faulty-wire1-state ?fw1state)
		(faulty-wire2-state ?fw2state)
		(component-type ?ctype)
		(component-state ?cstate)
	)
 	?c <- (component
		{type == ?ctype}
		(id ?cid)
	)
	(connection
	 	{out == ?cid && state == ?fw1state}
	)
	(connection
	 	{out == ?cid && state == ?fw2state}
	)
	=>
	(modify ?c
		(state ?cstate)
	)
)
(defrule causes-observable-specify
	"If component is in a certain state, that can lead to an observable"
 	(causes-feature
	 	(component ?cid)
		(component-state ?cstate)
		(observable ?oid)
	)
	(component
	 	{type == ?cid &&
		 state == ?cstate}
	)
	?o <- (observable
		{id == ?oid}
	)
	=>
	(modify ?o
	 	(could-be-observed TRUE)
	)
)
